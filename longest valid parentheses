Q.
Given a string containing just the characters '(' and ')', find the length of the longest valid (well-formed) parentheses substring.

 

Example 1:

Input: s = "(()"
Output: 2
Explanation: The longest valid parentheses substring is "()".
Example 2:

Input: s = ")()())"
Output: 4
Explanation: The longest valid parentheses substring is "()()".
Example 3:

Input: s = ""
Output: 0
 

Constraints:

0 <= s.length <= 3 * 104
s[i] is '(', or ')'.



Code:


class Solution {
public:
    int longestValidParentheses(string s) {
        int count=0;
        stack <int> str;
        str.push(-1);
        for( int i=0; i<s.length(); i++){
            if( s[i] == '('){
                str.push(i);
            }
            else{
                str.pop();
                if(str.empty()){
                    str.push(i);
                }
                else{
                    count = max(count, i-str.top());
                }
            }
        }
        return count;
    }
};
